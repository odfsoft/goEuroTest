<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
           http://www.springframework.org/schema/task 
           http://www.springframework.org/schema/task/spring-task-3.1.xsd">

	<!-- The DAO (aka @Repository) layer. -->
	<context:component-scan base-package="com.datapine.dao.direct" />
	
	<!-- The Service layer. -->


	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="locations">
            <list>
				<value>${config.location}</value>
            </list>
        </property>
    </bean>
    
   	<bean id="schemaGeneratorService" class="com.datapine.service.impl.SchemaGeneratorServiceImpl"/>
	<bean id="utilService" class="com.datapine.service.impl.UtilServiceImpl"/>

	<!-- The Utils configs to get initialized (TODO: remove it and the DatamartConfigDetails bean and others, not static access to config files) -->
    <bean id="dataBaseNamesTool" class="com.datapine.utils.DataBaseNamesTool"/>

    
   	<bean id="keyValueStore" class="com.datapine.keyvaluestore.RedisKeyValueStore"/>

	<bean id="clientDAOFactory" class="com.datamint.dao.client.impl.ClientDAOFactoryImpl"/>   	
	
	<!-- Redis client -->
   	<bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
        p:host-name="${redis.hostname}" p:port="${redis.port}" p:use-pool="true"/>
 
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
        p:connection-factory-ref="redisConnectionFactory"/>
	
	<bean id = "fileManager" class="com.datapine.file.impl.FileManagerBaseInTokenImpl">
		<constructor-arg ref="keyValueStore"/>
		<constructor-arg value="${datapine.folder}"/>
	</bean>
	
	<bean id = "urlManager" class="com.datapine.url.utils.impl.URLManagerImpl">
		<constructor-arg ref="keyValueStore"/>
	</bean>	

    
</beans>
